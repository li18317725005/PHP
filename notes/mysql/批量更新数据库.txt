//批量更新
UPDATE mytable 
    SET myfield = CASE id 
        WHEN 1 THEN 'value'
        WHEN 2 THEN 'value'
        WHEN 3 THEN 'value'
    END
WHERE id IN (1,2,3);




/*
  批量更新
  @ $table_name 表名全名
  @ data 更新的数据 二位数组
  @ 返回执行行数
 */
function batch_update($table_name = '', $data = array(), $field = '') {
	if (!$table_name || !$data || !$field) {
		return false;
	} else {
		$sql = 'UPDATE ' . $table_name;
	}
	$con = array();
	$con_sql = array();
	$fields = array();
	foreach ($data as $key => $value) {
		$x = 0;
		foreach ($value as $k => $v) {
			if ($k != $field && !$con[$x] && $x == 0) {
				$con[$x] = " set {$k} = (CASE {$field} ";
			} elseif ($k != $field && !$con[$x] && $x > 0) {
				$con[$x] = " {$k} = (CASE {$field} ";
			}
			if ($k != $field) {
				$temp = $value[$field];
				$con_sql[$x] .= " WHEN '{$temp}' THEN '{$v}' ";
				$x++;
			}
		}
		$temp = $value[$field];

		if (!in_array($temp, $fields)) {
			$fields[] = $temp;
		}
	}
	$num = count($con) - 1;
	foreach ($con as $key => $value) {

		foreach ($con_sql as $k => $v) {

			if ($k == $key && $key < $num) {
				$sql .= $value . $v . ' end),';
			} elseif ($k == $key && $key == $num) {
				$sql .= $value . $v . ' end)';
			}
		}
	}
	$str = implode(',', $fields);
	$sql .= " where {$field} in({$str})";
	$res = M()->execute($sql);
	return $res;
}